name: Build

on:
  release:
    types: [ created ]

jobs:
  ios:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: Import signing keys
      run: |
        security create-keychain -p password build.keychain
        security default-keychain -s ~/Library/Keychains/build.keychain

        base64 -D <<< "${{ secrets.CERT_APPLE_DISTRIBUTION }}" > Apple_Distribution_Z52EFCPL6D.p7b
        security import ./Apple_Distribution_Z52EFCPL6D.p7b -k ~/Library/Keychains/build.keychain -T /usr/bin/codesign

        base64 -D <<< "${{ secrets.CERT_APPLE_DEVELOPMENT }}" > Apple_Development_N952V7G2F5.p7b
        security import ./Apple_Development_N952V7G2F5.p7b -k ~/Library/Keychains/build.keychain -T /usr/bin/codesign

        base64 -D <<< "${{ secrets.CERT_APPLE_DISTRIBUTION_P12 }}" > Apple_Distribution_Z52EFCPL6D.p12
        security import ./Apple_Distribution_Z52EFCPL6D.p12 -k ~/Library/Keychains/build.keychain -P heslo -T /usr/bin/codesign

        base64 -D <<< "${{ secrets.CERT_APPLE_DEVELOPMENT_P12 }}" > Apple_Development_N952V7G2F5.p12
        security import ./Apple_Development_N952V7G2F5.p12 -k ~/Library/Keychains/build.keychain -P heslo -T /usr/bin/codesign

        base64 -D <<< "${{ secrets.CERT_DEVELOPER_ID_APPLICATION }}" > Developer_ID_Application_Z52EFCPL6D.p7b
        security import ./Developer_ID_Application_Z52EFCPL6D.p7b -k ~/Library/Keychains/build.keychain -P heslo -T /usr/bin/codesign

        # Unlock
        security unlock-keychain -p password ~/Library/Keychains/build.keychain
        security set-keychain-settings -lu
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k password ~/Library/Keychains/build.keychain

    - name: Import provisioning profile
      run: |
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp dist/ios/*.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: QtCache-5.15.1
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: 5.15.1
        cached: ${{ steps.cache-qt.outputs.cache-hit }}
        target: ios
    - name: Build the iOS binary and upload it to Testflight
      env:
        APPLEID_PASSWORD: ${{ secrets.APPLEID_PASSWORD }}
        APPLEID_NAME: ${{ secrets.APPLEID_NAME }}
      run: |
        export TAG_NAME=$(./dist/get-tag-name.sh)
        bash ./dist/ios/build.sh
    - name: Upload to GitHub
      if: github.event_name == 'release'
      run: |
        TAG_NAME=$(./dist/get-tag-name.sh)
        ./dist/upload-github-release-asset.sh github_api_token=${{ secrets.GITHUB_TOKEN }} tag="$TAG_NAME" filename="build_ios/Lith.ipa"

  android:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: QtCache-5.15.1
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: 5.15.1
        cached: ${{ steps.cache-qt.outputs.cache-hit }}
        target: android
    - name: Get OpenSSL
      run: |
        git clone https://github.com/KDAB/android_openssl.git --depth=1
    - name: Build the Android binary
      run: |
        export ANDROID_NDK_ROOT=/usr/local/lib/android/sdk/ndk-bundle
        export ANDROID_SDK_ROOT=/usr/local/lib/android/sdk
        bash ./dist/android/build.sh
    - name: Upload artifacts to GitHub
      if: github.event_name != 'release'
      uses: actions/upload-artifact@v2
      with:
        name: android-build-debug.apk
        path: build_android/android-build//build/outputs/apk/debug/android-build-debug.apk
    - name: Upload to GitHub
      if: github.event_name == 'release'
      run: |
        TAG_NAME=$(./dist/get-tag-name.sh)
        ./dist/upload-github-release-asset.sh github_api_token=${{ secrets.GITHUB_TOKEN }} tag="$TAG_NAME" filename="build_android/android-build//build/outputs/apk/debug/android-build-debug.apk"
